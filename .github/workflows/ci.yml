# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the workflow will run
on: [push, pull_request]

# Make colourful outputs?
env:
  CARGO_TERM_COLOR: always
  SQLX_VERSION: 0.6.3
  SQLX_FEATURES: "rustls,postgres"

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  test:
    name: Test
    runs-on: ubuntu-latest
    services:
      image: postgres
      env:
        POSTGRES_PASSWORD: password
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
      - uses: Swatinem/rust-cache@v2
      - name: Install sqlx-cli
        run:
          cargo install sqlx-cli
          --version=${{ env.SQLX_VERSION }}
          --features ${  env.SQLX_FEATURES }
          --no-default-features
          --locked
      - name: Install postgres-client
        run: sudo apt-get update && sudo apt-get install postgres-client -y
      - name:  Migrate database
        run: SKIP_DOCKER=true ./scripts/init_db.sh
      - name: Run tests
        run: cargo test

  fmt:
    name: Format
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: rustfmt
      - name: Enforce formatting
        run: cargo fmt --check

  clippy:
    name: Clippy
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - uses: dtolnay/rust-toolchain@stable
        with:
          components: clippy
      - uses: Swatinem/rust-cache@v2
      - name: Linting
        run: cargo clippy -- -D warnings

#   coverage:
#     name: Code Coverage
#     runs-on: ubuntu-latest
#     container:
#       image: xd009642/tarpaulin
#       options: --security-opt seccomp=unconfined
#     steps:
#       - name: Checkout repo
#         uses: actions/checkout@v3
#       - name: Generate code coverage
#         run: |
#           cargo tarpaulin --verbose --workspace

